import io.github.bonigarcia.wdm.WebDriverManager;
import org.apache.commons.io.FileUtils;
import org.junit.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.io.Console;
import java.io.File;
import java.io.IOException;
import java.time.Duration;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import static org.junit.Assert.assertEquals;
public class Guru99TestApp {private WebDriver driver;
    WebDriverWait wait;
    Logger logger;
@Before
    public void setUp()
    {
        logger = Logger.getLogger("TestAutomation");
        ChromeOptions option = new ChromeOptions();
        option.addArguments("--remote-allow-origins=*");
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver(option);
        //System.setProperty("webdriver.chrome.driver","C:/driver/chromedriver_win32/chromedriver.exe");
        //driver = new ChromeDriver();
        //System.setProperty("webdriver.http.factory", "jdk-http-client");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        logger.info("Window maximized");
        driver.get("https://demo.guru99.com/v4/index.php");
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        driver.switchTo().frame("gdpr-consent-notice");
        WebElement acceptCookies = driver.findElement(By.xpath("//*[@id='save']/span[1]/div/span"));
        acceptCookies.click();
        driver.switchTo().defaultContent();
    @Test
public void logInTest()
{
    WebElement userIdTxtBox = driver.findElement(By.name("uid"));
    userIdTxtBox.sendKeys("MateuszMannn");
    WebElement pswdTxt = driver.findElement(By.name("password"));
    pswdTxt.sendKeys("MateuszMannnn123");
    WebElement loginBtn = driver.findElement(By.name("btnLogin"));
    loginBtn.click();
}


public void logIn(String name, String pswd, Boolean isPswdCorrect)
{
    WebElement userIdTxtBox = driver.findElement(By.name("uid"));
    userIdTxtBox.sendKeys(name);
    WebElement pswdTxt = driver.findElement(By.name("password"));
    pswdTxt.sendKeys(pswd);
    WebElement loginBtn = driver.findElement(By.name("btnLogin"));
    loginBtn.click();
    if(isPswdCorrect)
    {
        WebElement welcomeMsg =
                driver.findElement(By.xpath("/td[@style='color: green']"));
        String welcomeTxt = welcomeMsg.getText();
        String expectedTxt = "Manger Id : " + name;
        Assert.assertEquals(expectedTxt, welcomeTxt);
    }
    else
    {
        driver.switchTo().alert().accept();
        loginBtn = driver.findElement(By.name("btnLogin"));
        Assert.assertEquals(true, loginBtn.isDisplayed());
    }

}

@Test
public void logInHappyPath()
{
    logIn("MateuszMannn", "MateuszMannn123", true);
}

public void logInFailed()
{
    logIn("MateuszMannn", "MateuszMannn123", false);
}
